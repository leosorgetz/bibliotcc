imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@UserBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: pt
    articles_directory: '%kernel.project_dir%/uploads/articles'
    codes_directory: '%kernel.project_dir%/uploads/codes'

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: pt_BR
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true


# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    paths:
         '%kernel.project_dir%/app/Resources': Resources

# Doctrine Configuration
doctrine:
#    dbal:
#        driver: pdo_mysql
#        host: '%database_host%'
#        port: '%database_port%'
#        dbname: '%database_name%'
#        user: '%database_user%'
#        password: '%database_password%'
#        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'
#    dbal:
#        default_connection: default
#        connections:
#            default:
#                host:     %database_host%
#                port:     %database_port%
#                dbname:   %database_name%
#                user:     %database_user%
#                password: %database_password%
#                charset:  UTF8
    dbal:
        default_connection: default
        connections:
             default:
                 host:     %database_host%
                 port:     %database_port%
                 dbname:   %database_name%
                 user:     %database_user%
                 password: %database_password%
                 charset:  UTF8
                 wrapper_class: 'Facile\DoctrineMySQLComeBack\Doctrine\DBAL\Connection'
                 driver_class: 'Facile\DoctrineMySQLComeBack\Doctrine\DBAL\Driver\PDOMySql\Driver'
                 options:
                     x_reconnect_attempts: 3
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    port: '%mailer_port%'
    encryption: '%mailer_encryption%'
#    sender_address: BiblioTCC
    spool: { type: memory }

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations
    organize_migrations: false # Version >=1.2 Possible values are: "BY_YEAR", "BY_YEAR_AND_MONTH", false

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User

    from_email:
        address: "%mailer_user%"
        sender_name: BiblioTCC

    service:
        mailer: fos_user.mailer.twig_swift

    registration:
        form:
            type: AppBundle\Form\RegistrationType

    profile:
        form:
              type: AppBundle\Form\ProfileType

easy_admin:
    entities:
       User:
           class: AppBundle\Entity\User
           label: 'Usuário'

           list:
               actions:
                   - { name: 'new', label: 'Adicionar Usuário' }

               title: 'Lista de Usuarios'

               fields:
                   - { property: 'name', label: 'Nome'}
                   - { property: 'username', label: 'Usuario'}
                   - email
                   - { property: 'enabled', label: 'Ativado'}
                   - roles

               sort: ['name', 'ASC']

           new:
               title: "Adicionar Usuario"

           edit:
               title: "Editar Usuario"

           form:
               fields:
                   - { property: 'name', label: 'Nome'}
                   - { property: 'username', label: 'Usuario'}
                   - email
                   - { property: 'roles',
                       type: 'choice',
                       label: 'Nivel de Acesso',
                       type_options: {
                          multiple: true,
                          choices: {
                             'ROLE_STUDENT': 'ROLE_STUDENT',
                             'ROLE_PROFESSOR': 'ROLE_PROFESSOR' ,
                             'ROLE_ADMIN': 'ROLE_ADMIN',
                             'ROLE_SUPER_ADMIN': 'ROLE_SUPER_ADMIN'
                          }
                       }
                    }
                   - enabled
                   # if administrators are allowed to edit users' passwords and roles, add this:
                   - { property: 'plainPassword', type: 'text', type_options: { required: false }, label: 'Senha'}
    design:
        menu:
            - { entity: 'User'}
            - { label: 'Dashboard', url: '../dashboard'}

#       Semester:
#            class: AppBundle\Entity\Semester
#
#       Board:
#            class: AppBundle\Entity\Board
#            form:
#                fields:
#                    - id
#                    - name
#                    - evaluatorOne
#                    - evaluatorTwo
#                    - semester
#                    - advisorGrade
#                    - evaluatorOneGrade
#                    - evaluatorTwoGrade
#                    - advisorConsiderations
#                    - evaluatorOneConsiderations
#                    - evaluatorTwoConsiderations
#                    - finalGrade
#                    - project


    site_name: 'BiblioTCC'

sensio_framework_extra:
    router:      { annotations: true }
    request:     { converters: true, auto_convert: true }
    view:        { annotations: true }
    cache:       { annotations: true }
    security:    { annotations: true }
